params:
  - params.yaml

vars:
  - src: "src"
  - raw: "data/01_raw"
  - clean: "data/02_clean"
  - main: "data/03_main"
  - python: PYTHONPATH=src python -m

stages:
  nettoyer-2020-municipales-1:
    cmd: >-
      sed '13751,13752s/ \t / / ; 16921s/ \t / /'
      < ${raw}/elections/2020-municipales-1-bureau_de_vote_avant_correction.csv
      > ${raw}/elections/2020-municipales-1-bureau_de_vote.csv
    deps:
      - ${raw}/elections/2020-municipales-1-bureau_de_vote_avant_correction.csv
    outs:
      - ${raw}/elections/2020-municipales-1-bureau_de_vote.csv

  normaliser-format-elections:
    foreach: ${scrutins}
    do:
      cmd: >-
        ${python} hexagonal.resultats.format_${item.format}
        ${raw}/elections/${key}.csv ${clean}/elections/${key}.csv ${item.encoding} "${item.delimiter}"
      deps:
        - ${raw}/elections/${key}.csv
        - ${src}/hexagonal/resultats/format_${item.format}.py
        - ${src}/hexagonal/codes.py
      outs:
        - ${clean}/elections/${key}.csv

  candidats-nettoyer:
    foreach:
      2022-legislatives-1-candidats:
        delimiter: "\t"
        encoding: latin1
      2022-legislatives-2-candidats:
        delimiter: "\t"
        encoding: latin1
      2024-legislatives-1-candidats:
        delimiter: ";"
      2024-legislatives-2-candidats:
        delimiter: ";"
    do:
      cmd: >-
        ${python} hexagonal.candidatures.nettoyer
        ${item}
        "${raw}/elections/${key}.csv"
        "${clean}/elections/${key}.csv"
      deps:
        - ${raw}/elections/${key}.csv
        - ${src}/hexagonal/candidatures/nettoyer.py
      outs:
        - ${clean}/elections/${key}.csv


  2024-legislatives-candidats:
    foreach:
      - 1
      - 2
    do:
      cmd: >-
        ${python} hexagonal.candidatures.legislatives2024
        ${clean}/elections/2024-legislatives-${item}-candidats.csv
        ${raw}/elections/2024-legislatives-nfp-sensibilites.csv
        ${raw}/elections/2024-legislatives-nuances-lfi.csv
        ${main}/elections/2024-legislatives-${item}-candidats.csv
      deps:
        - ${clean}/elections/2024-legislatives-${item}-candidats.csv
        - ${raw}/elections/2024-legislatives-nfp-sensibilites.csv
        - ${raw}/elections/2024-legislatives-nuances-lfi.csv
        - ${src}/hexagonal/candidatures/legislatives2024.py
        - ${src}/hexagonal/codes.py
      outs:
        - ${main}/elections/2024-legislatives-${item}-candidats.csv

  2022-legislatives-candidats:
    foreach:
      - 1
      - 2
    do:
      cmd: >-
        ${python} hexagonal.candidatures.legislatives2022
        ${clean}/elections/2022-legislatives-${item}-candidats.csv
        ${raw}/elections/2022-legislatives-nuances-lemonde.csv
        ${raw}/elections/2022-legislatives-nuances-legis-2022.csv
        ${main}/elections/2022-legislatives-${item}-candidats.csv
      deps:
        - ${clean}/elections/2022-legislatives-${item}-candidats.csv
        - ${raw}/elections/2022-legislatives-nuances-lemonde.csv
        - ${raw}/elections/2022-legislatives-nuances-legis-2022.csv
        - ${src}/hexagonal/candidatures/legislatives2022.py
        - ${src}/hexagonal/codes.py
      outs:
        - ${main}/elections/2022-legislatives-${item}-candidats.csv

  parrainages_nettoyer:
    foreach:
      - 2022
    do:
      deps:
        - ${raw}/elections/${item}-presidentielle-parrainages.csv
        - ${src}/hexagonal/parrainages/nettoyer.py
      outs:
        - ${clean}/elections/${item}-presidentielle-parrainages.csv
      cmd: >-
        ${python} hexagonal.parrainages.nettoyer
        ${raw}/elections/${item}-presidentielle-parrainages.csv
        ${clean}/elections/${item}-presidentielle-parrainages.csv

  parrainages_qualifier:
    foreach:
      - 2022
    do:
      deps:
        - ${clean}/elections/${item}-presidentielle-parrainages.csv
        - ${clean}/cog/departements.csv
        - ${clean}/cog/communes.csv
        - ${src}/hexagonal/parrainages/qualifier.py
      outs:
        - ${main}/elections/${item}-presidentielle-parrainages.csv
      cmd: >-
        ${python} hexagonal.parrainages.qualifier
        ${clean}/elections/${item}-presidentielle-parrainages.csv
        ${clean}/cog/departements.csv
        ${clean}/cog/communes.csv
        ${main}/elections/${item}-presidentielle-parrainages.csv

  correspondances_bureau_de_vote_circonscription:
    foreach:
      - 2024
    do:
      cmd: >-
        ${python} hexagonal.correspondances_circonscription
        ${clean}/elections/${item}-legislatives-1-bureau_de_vote.csv
        ${clean}/elections/${item}-legislatives-1-candidats.csv
        ${clean}/elections/${item}-legislatives-correspondances-bureau_de_vote-circonscription.csv
      deps:
        - ${clean}/elections/${item}-legislatives-1-bureau_de_vote.csv
        - ${clean}/elections/${item}-legislatives-1-candidats.csv
        - ${src}/hexagonal/correspondances_circonscription.py
        - ${src}/hexagonal/codes.py
      outs:
        - ${clean}/elections/${item}-legislatives-correspondances-bureau_de_vote-circonscription.csv

  assemblee_nationale_deputees:
    deps:
      - ${raw}/assemblee-nationale.zip
      - ${src}/hexagonal/assemblee_nationale/liste.py
      - ${src}/hexagonal/assemblee_nationale/utils.py
    outs:
      - ${clean}/assemblee_nationale/fiches.csv
      - ${clean}/assemblee_nationale/deputes.csv
    cmd: >-
      ${python} hexagonal.assemblee_nationale.liste
      ${raw}/assemblee-nationale.zip
      ${clean}/assemblee_nationale/fiches.csv
      ${clean}/assemblee_nationale/deputes.csv

  assemblee_nationale_mandats:
    deps:
      - ${raw}/assemblee-nationale.zip
      - ${src}/hexagonal/assemblee_nationale/mandats.py
      - ${src}/hexagonal/assemblee_nationale/utils.py
    outs:
      - ${clean}/assemblee_nationale/mandats.csv
    cmd: >-
      ${python} hexagonal.assemblee_nationale.mandats
      ${raw}/assemblee-nationale.zip
      ${clean}/assemblee_nationale/mandats.csv

  assemblee_nationale_groupes:
    deps:
      - ${raw}/assemblee-nationale.zip
      - ${src}/hexagonal/assemblee_nationale/groupes.py
      - ${src}/hexagonal/assemblee_nationale/utils.py
    outs:
      - ${clean}/assemblee_nationale/groupes.csv
      - ${clean}/assemblee_nationale/affiliations.csv
    cmd: >-
      ${python} hexagonal.assemblee_nationale.groupes
      ${raw}/assemblee-nationale.zip
      ${clean}/assemblee_nationale/groupes.csv
      ${clean}/assemblee_nationale/affiliations.csv

  rne_nettoyer:
    foreach:
      - conseillers_arrondissement
      - conseillers_municipaux
      - conseillers_departementaux
      - conseillers_regionaux
      - conseillers_csp
    do:
      deps:
        - ${raw}/rne/${item}.csv
        - ${src}/hexagonal/rne/extraire.py
      outs:
        - ${clean}/rne/${item}.csv
      cmd: >-
        ${python} hexagonal.rne.extraire
        ${raw}/rne
        ${clean}/rne
        ${item}

  annuaire_extraire:
    deps:
      - ${raw}/annuaire/annuaire.tar.bz2
      - ${src}/hexagonal/annuaire/extraire_organismes.py
    outs:
      - ${raw}/annuaire/mairies.json
      - ${raw}/annuaire/epcis.json
      - ${raw}/annuaire/conseils_departementaux.json
      - ${raw}/annuaire/conseils_regionaux.json
      - ${raw}/annuaire/prefectures.json
    cmd: >-
      ${python} hexagonal.annuaire.extraire_organismes
      ${raw}/annuaire/annuaire.tar.bz2
      ${raw}/annuaire/

  annuaires_nettoyer:
    deps:
      - ${raw}/annuaire/mairies.json
      - ${raw}/annuaire/conseils_departementaux.json
      - ${src}/hexagonal/annuaire/nettoyer.py
    outs:
      - ${clean}/annuaire/mairies.csv
      - ${clean}/annuaire/conseils_departementaux.csv
    cmd: >-
      ${python} hexagonal.annuaire.nettoyer
      ${raw}/annuaire
      ${clean}/annuaire
      
  cog_nettoyer:
    deps:
      - ${raw}/cog.zip
      - ${src}/hexagonal/cog/extraire.py
    outs:
      - ${clean}/cog/regions.csv
      - ${clean}/cog/departements.csv
      - ${clean}/cog/communes.csv
      - ${clean}/cog/communes_com.csv
      - ${clean}/cog/communes_historiques.csv
      - ${clean}/cog/com.csv
      - ${clean}/cog/ctcd.csv
      - ${clean}/cog/mouvements_communes.csv
    cmd: >-
      ${python} hexagonal.cog.extraire
      ${raw}/cog.zip
      ${clean}/cog
